Amazon S3 Driver
================

This is the Onitu driver for the Amazon S3 cloud service. It permits to sync Onitu with a S3 bucket.

Important Note: Please keep in mind this driver uses authenticated interaction (using your Amazon credentials) with the Amazon S3 REST API.
	  As it uses your AWS Account, you'll be charged accordingly for every interaction with a S3 bucket through Onitu. You have full responsability
	  for transfers you are getting charged for on your bucket when using Onitu. If you still want to try Onitu, Amazon proposes a Free Tier offer
	  including 20,000 Get Requests and 2,000 Put Requests on Amazon S3 (see http://aws.amazon.com/free/).

To make it work you're going to need your Amazon Access ID and your Amazon Secret Access Key.

If you already have an AWS account, you can retrieve them at https://console.aws.amazon.com/iam/home?#security_credential, tab "Access Keys (Access Key ID and Secret Access Key)".

Once you have them, you need to create a new driver entry in the setup JSON file (setup.json), and fill in the following fields:
- driver : this should always be "amazon_s3"
- options: The following options can be used:
  - bucket: the name of the bucket you want to use with Onitu
  - root: The folder under which you want Onitu to put all the transferred files on your bucket. Onitu won't put files elsewhere. If you want to use the whole bucket, omit it or set "" 
  - aws_access_key: Put here your AWS Access Key
  - aws_secret_key: Put here your AWS Secret Key
  - changes_timer: Onitu periodically checks for changes on the bucket. Use this to set a period of time, in seconds, between each retry. Defaults to 10 seconds if you omit it

A correct syntax for the entry could be the following:

    "s3": {
      "driver": "amazon_s3",
      "options": {
        "root": "/onitu",
	"bucket": "onitu-test-2",
	"aws_access_key": "YourAccessKey",
	"aws_secret_key": "YourSecretKey",
	"changes_timer" : 10
       }
     }

Then, to synchronize a folder with your S3 bucket, e.g. the "s3/" folder, add this to your rules:

    {
      "match": {"path": "/s3/"},
      "sync": ["s3"]
    }

This will sync the s3/ folder with the driver named s3.
